<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- 1. properties 파일을 bean으로 등록 -->
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>Classpath:properties/db.properties</value>
		</list>
	</property>
</bean>

<!-- 2. 접속정보를 가지고 있는 객체 DataSource 작성 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="${driver}"/>
	<property name="url" value="${url}"/>
	<property name="username" value="${user}"/>
	<property name="password" value="${pw}"/>
	<property name="defaultAutoCommit" value="true"/>
	</bean>
<!-- 3.mybatis의 sqlsessionFactory 객체를 bean으로 등록 -->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
	<property name="configLocation" value="/WEB-INF/mybatis/configuration.xml"/>
</bean>

<!-- 4.Spring에서 사용하는 bean autowired or resource 통해서 사용하기 위해 -->
<bean  id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
 <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
</bean>

<!-- 5. 트랜잭션 매니저 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<!-- 6.트랜잭션이 자동으로 동작되는 메소드 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
	</tx:attributes>
</tx:advice>
<!-- 7. Transaction을 AOP을 통해서 작성 -->
<aop:config>
	<aop:advisor advice-ref="txAdvice" pointcut="execution(public * com.min.mj.model.*Service*.*(..))"/>
</aop:config>




    

</beans>
